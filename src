#!/bin/bash 

STRING_LEN=15
OUTPUT_FILE="output.txt"
OUTPUT_FILE_SORT="sorted.output.txt"
MAX_FILE_SIZE=$((1024*1024)) # 1Mb = 1048576 Bytes

cleanup(){
 # Erase the contents of the file
 : > $OUTPUT_FILE
}

try_catch(){
	# Params:
	#  $1 - random alphanumeric string 
	# Returns: 
	#  -1 if the file is reached its max size 
	if [[ $# != 2 ]]; then
		local len=${#1} # string length
		if [[ $len -ge 15 ]]; then # meaning we have something to work with
			local mod=$(($len / $STRING_LEN))
			local current_size=$(wc -c $OUTPUT_FILE | cut -d" " -f1)	
			if [[ $(($mod * $(($STRING_LEN +1)) + $current_size)) -ge $MAX_FILE_SIZE ]]; then
				echo -1
			else
				slice_and_write $1 $mod
			fi
		fi
	else
		echo -e "Error: Invalid number of parameters.\n Expected two (2) arguments instead of ($#)"
		return -1
	fi
}

slice_and_write(){
	# Params:
	#  $1 - master string
	#  $2 - mod (how many substrings are in master string)
	
	local str=$1 # save string (len 15 or more)
	local index=0
	for ((i=0; i < $2; i++)); do
		echo ${str:index:STRING_LEN} >> $OUTPUT_FILE
		index=$(($index + $STRING_LEN))
	done
}

main(){
	# Main routine. Execution begins by calling this procedure.
  echo -e "Generating pseudorandom alphanumeric strings"
	while read line; do
 		local str=$(echo $line | tr -dc '[:alnum:]')	
 		if [[ $(try_catch $str) -lt 0 ]]; then
 			echo "$OUTPUT_FILE file is reaching 1Mb. Interrupt triggered."
 			break
 		fi	
	done < /dev/urandom
	
	echo -e "The file size is $(ls -l $OUTPUT_FILE | cut -d' ' -f5) bytes."
	sort $OUTPUT_FILE --output=$OUTPUT_FILE_SORT
	echo -e "File is now sorted. Removing lines that begin with letter 'a' (case insensitive)."
	grep -iv -e "^a" $OUTPUT_FILE_SORT > $OUTPUT_FILE
	echo -e "File had $(grep -ic -e "^a" $OUTPUT_FILE_SORT) lines that had letter 'a' as a first character."
	echo "The final result (without 'A's) is stored in $OUTPUT_FILE and sorted in $OUTPUT_FILE_SORT."
}

#############################
### Execution begins here ###
#############################

cleanup
main
